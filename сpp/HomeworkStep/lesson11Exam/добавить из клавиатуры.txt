
#include <stdlib.h> 
#include <iostream> 
#include <fstream> 
#include <string>
#include <sstream>
#include <windows.h>

using namespace std;

struct PhoneBook
{
    string name;
    int phone;
    string email;
};

PhoneBook* Add(PhoneBook* MyPhoneBook, int const count) //функция увеличения динамического массива структур
{
    if (count == 0)
    {
        MyPhoneBook = new PhoneBook[1];
    }
    else
    {
        PhoneBook* temp = new PhoneBook[count + 1];
        for (int i = 0; i < count; i++)
        {
            temp[i] = MyPhoneBook[i];
        }
        delete[] MyPhoneBook;
        MyPhoneBook = temp;
    }
    return MyPhoneBook;
}

void ShowData(PhoneBook* MyPhoneBook, int size)
{
    cout << "#\tНомер ПП\tФИО\tНомер телефона\t E-mail\n";
    for (int i = 0; i < size; i++)
    {
        cout << i + 1 << MyPhoneBook[i].name << "\t" << MyPhoneBook[i].phone << "\t" << MyPhoneBook[i].email << "\n";
    }
}

void SetData(PhoneBook MyPhoneBook[], int const count)//функция заполнения последнего элемемнта массива структур
{
    cout << "Введите имя\n"; getline(cin, MyPhoneBook[count].name);
    cout << "Введте номер телефона\n"; cin >> MyPhoneBook[count].phone;
    cin.ignore();
    cout << "Введите емайл\n"; getline(cin, MyPhoneBook[count].email);
}

using namespace std;
int main()
{
    setlocale(LC_ALL, "rus");
    PhoneBook* MyPhoneBook = 0;//указатель на массив структур
    int count = 0;//счетчик стукрур в массиве
    
    MyPhoneBook = Add(MyPhoneBook, count);//получаем адрес на массив структур
    SetData(MyPhoneBook, count);//передаем стуктуру в функцию для заполнения последней стукруты
    count++;//изменяем счетчик на + 1
    cin.get();//для ввода строк нужно очистить буфер
    ShowData(MyPhoneBook, count);//выводим массив структур на экран
    delete[] MyPhoneBook;//удаляем массив структур
}