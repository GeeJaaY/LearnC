1. Створити масив на 20 елементів. Заповнити його випадковими цілии числами 
в діапазоні [-25,25]. Замінити всі непарні елементи масива на 0. Вивести новий масив на екран.

2. Створіть 2 масиви з 5 випадкових цілих чисел з відрізка [0; 5] кожен. 
Виведіть масиви на екран в двох окремих рядках. 
Порахуйте середнє арифметичне елементів кожного масиву і виведіть, 
для якого з масивів це значення виявилося більше 
(або повідомте, що їхнє середні арифметичні рівні).

3. Створіть масив з 4 випадкових цілих чисел з відрізка [10; 99], 
виведіть його на екран у рядок. 
Визначити і вивести на екран повідомлення про те, чи є масив строго 
зростаючою послідовністю (кожен наступний елемент більший за попередній).

4. Створіть масив з 12 випадкових цілих чисел з відрізка [-15; 15]
Визначте який елемент є в цьому масиві максимальним і виведіть індекс 
його останнього входження в масив.
Наприклід, при згенерованому масиві [1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 12, 10] 
має бути: масимальний елемент 12, індекс останнього входження 10.

5. Зчитати з консолі 2 числа: n та m. Створити масив на n елементів. 
Заповнити його послідовністю, вигляду m, m-2, m-4, m-6 і т.д. Вивести результуючий масив 
на екран.

6. Користувач вводить з клавіатури натуральне число більше 3, яке зберігається в змінну n. 
Якщо користувач ввів не підходяще число, 
то програма повинна попросити користувача повторно ввести число. Створити масив з n 
випадкових цілих чисел з відрізка [0, n] і вивести його на екран. 
Створити другий масив тільки з парних елементів першого масиву, якщо вони там є, і вивести 
його на екран.

7. Зчитати число n з консолі. Створити масив з n елементів. Заповнити масив числами: 
посередині 0, потім вправо і вліво збільшуємо на 1, далі вправо і вліво на збільшуємо на 2.
Якщо кількість елементів парна, то всередині мають бути 2 нулі. Вивести масив на екран. 
Приклад 1: 5,4,3,2,1,0,1,2,3,4,5
Приклад 2: 3, 2, 1, 0, 0, 1, 2, 3

8. Зчитати з клавіатури число n. Вивести в консоль порожній квадрат з діагоналлю. Для прикладу, при n=6:
* * * * * *
* *       *
*   *     *
*     *   *
*       * *
* * * * * *



